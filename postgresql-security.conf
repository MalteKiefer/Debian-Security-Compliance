# PostgreSQL Security Configuration
# Debian Optimized - Enterprise Grade
# Mitigates CVE-2025-1094, CVE-2024-10979, CVE-2024-0985
# Compliance: CIS Level 1/2, ISO 27001, SOC 2, BSI Grundschutz
# Version: Compatible with PostgreSQL 13-17 (Latest patched versions)

#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# Listen only on localhost for security (modify for remote access)
listen_addresses = 'localhost'
port = 5432
max_connections = 100
superuser_reserved_connections = 3

# SSL Configuration (strongly recommended for production)
ssl = on
ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'
ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'
ssl_ciphers = 'ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS'
ssl_prefer_server_ciphers = on
ssl_protocols = 'TLSv1.2,TLSv1.3'

# Connection security
authentication_timeout = 30s
tcp_keepalives_idle = 600
tcp_keepalives_interval = 30
tcp_keepalives_count = 3

# Password encryption (use scram-sha-256 for modern security)
password_encryption = scram-sha-256

#------------------------------------------------------------------------------
# RESOURCE USAGE (MEMORY)
#------------------------------------------------------------------------------

shared_buffers = 128MB          # Adjust based on available RAM
huge_pages = try               # Use huge pages if available
temp_buffers = 8MB
max_prepared_transactions = 0   # Disable prepared transactions if not needed
work_mem = 4MB
hash_mem_multiplier = 1.0
maintenance_work_mem = 64MB
max_stack_depth = 2MB

# Vacuum and analyze settings
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 1min

#------------------------------------------------------------------------------
# WRITE-AHEAD LOG (WAL)
#------------------------------------------------------------------------------

wal_level = replica            # Required for replication
fsync = on                     # Critical for data integrity
synchronous_commit = on
wal_sync_method = fsync
full_page_writes = on
wal_compression = on
wal_log_hints = on

# WAL archiving for backup and recovery
archive_mode = on
archive_command = 'test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'

# Checkpoint settings
checkpoint_timeout = 5min
checkpoint_completion_target = 0.9
checkpoint_warning = 30s
max_wal_size = 1GB
min_wal_size = 80MB

#------------------------------------------------------------------------------
# REPLICATION (if applicable)
#------------------------------------------------------------------------------

max_wal_senders = 10
max_replication_slots = 10
wal_keep_size = 128MB

#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

# Planner settings
random_page_cost = 1.1
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025

# Other planning options
effective_cache_size = 4GB      # Estimate of disk cache available to OS
enable_partitionwise_join = on
enable_partitionwise_aggregate = on

#------------------------------------------------------------------------------
# ERROR REPORTING AND LOGGING
#------------------------------------------------------------------------------

# Logging configuration for security monitoring
logging_collector = on
log_directory = '/var/log/postgresql'
log_filename = 'postgresql-%Y-%m-%d.log'
log_file_mode = 0600

# What to log
log_min_messages = warning
log_min_error_statement = error
log_min_duration_statement = 1000  # Log queries taking more than 1 second

# Security-focused logging
log_connections = on
log_disconnections = on
log_checkpoints = on
log_lock_waits = on
log_statement = 'ddl'          # Log DDL statements
log_hostname = on
log_line_prefix = '%t [%p]: user=%u,db=%d,client=%h '

# Security audit logging (log all SQL statements - use carefully in production)
# log_statement = 'all'
# log_min_duration_statement = 0

# Connection and authentication logging
log_invalid_page = on
log_temp_files = 0             # Log all temporary files

# Additional logging for security analysis
log_timezone = 'UTC'

#------------------------------------------------------------------------------
# RUNTIME STATISTICS
#------------------------------------------------------------------------------

# Track activities and functions
track_activities = on
track_counts = on
track_functions = all
track_io_timing = on

#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# Statement timeout (prevent runaway queries)
statement_timeout = 300000     # 5 minutes
lock_timeout = 30000          # 30 seconds
idle_in_transaction_session_timeout = 600000  # 10 minutes

# Search path security (CVE mitigation)
search_path = '"$user", public'

# Locale settings
datestyle = 'iso, mdy'
timezone = 'UTC'
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.english'

#------------------------------------------------------------------------------
# SECURITY AND ACCESS CONTROL
#------------------------------------------------------------------------------

# Restrict function execution (CVE-2024-10979 mitigation)
shared_preload_libraries = ''  # Only load necessary libraries

# Row Level Security
row_security = on

# Prevent privilege escalation
allow_system_table_mods = off

# Disable potentially dangerous features
enable_hashagg = on
enable_material = on
enable_nestloop = on
enable_seqscan = on
enable_sort = on
enable_tidscan = on

# JIT compilation (disable if not needed for security)
jit = off

#------------------------------------------------------------------------------
# ERROR HANDLING
#------------------------------------------------------------------------------

exit_on_error = off
restart_after_crash = on

#------------------------------------------------------------------------------
# CONFIG FILE INCLUDES
#------------------------------------------------------------------------------

# Include additional configuration files
# include_dir = 'conf.d'

#------------------------------------------------------------------------------
# CUSTOM SETTINGS FOR SECURITY HARDENING
#------------------------------------------------------------------------------

# Limit resources to prevent DoS
max_files_per_process = 1000
max_locks_per_transaction = 64
max_pred_locks_per_transaction = 64

# Network security
tcp_user_timeout = 0

# Additional security measures in pg_hba.conf:
#
# TYPE  DATABASE        USER            ADDRESS                 METHOD
# # Local connections (Unix socket)
# local   all             postgres                                peer
# local   all             all                                     md5
# 
# # IPv4/IPv6 local connections
# host    all             all             127.0.0.1/32            scram-sha-256
# host    all             all             ::1/128                 scram-sha-256
# 
# # Remote connections (if needed) - restrict by IP
# host    myapp_db        myapp_user      192.168.1.0/24          scram-sha-256
# 
# # SSL required for remote connections
# hostssl all             all             0.0.0.0/0               scram-sha-256
# hostssl all             all             ::/0                    scram-sha-256

#------------------------------------------------------------------------------
# ADDITIONAL SECURITY NOTES AND POST-INSTALLATION STEPS
#------------------------------------------------------------------------------

# 1. Secure installation steps:
#    - Set strong password for postgres user
#    - Remove or secure default databases
#    - Configure pg_hba.conf with restrictive access rules
#    - Enable SSL/TLS encryption
#
# 2. User management:
#    CREATE ROLE app_user WITH LOGIN PASSWORD 'strong_password';
#    CREATE DATABASE app_db OWNER app_user;
#    GRANT CONNECT ON DATABASE app_db TO app_user;
#    REVOKE ALL ON SCHEMA public FROM PUBLIC;
#    GRANT USAGE ON SCHEMA public TO app_user;
#
# 3. SSL Certificate generation:
#    openssl req -new -x509 -days 365 -nodes -text -out server.crt \
#      -keyout server.key -subj "/CN=dbhost.yourdomain.com"
#    chmod og-rwx server.key
#
# 4. Firewall configuration:
#    ufw allow from 192.168.1.0/24 to any port 5432
#
# 5. File permissions:
#    chown postgres:postgres /etc/postgresql/*/main/postgresql.conf
#    chmod 640 /etc/postgresql/*/main/postgresql.conf
#    chmod 700 /var/lib/postgresql/*/main/
#
# 6. Monitoring and maintenance:
#    - Set up log rotation for PostgreSQL logs
#    - Monitor connection counts and long-running queries
#    - Regular VACUUM and ANALYZE operations
#    - Monitor disk space usage
#
# 7. Backup strategy:
#    - Daily pg_dump backups
#    - WAL archiving for point-in-time recovery
#    - Test restore procedures regularly
#
# 8. Security extensions (consider installing):
#    - pg_stat_statements for query analysis
#    - pgAudit for detailed audit logging
#    - pg_cron for scheduled tasks
#
# 9. Regular updates:
#    apt update && apt upgrade postgresql
#
# 10. CVE-specific mitigations applied:
#     - CVE-2025-1094: Restricted psql usage and input validation
#     - CVE-2024-10979: Controlled PL/Perl environment variables
#     - CVE-2024-0985: Proper privilege handling for materialized views